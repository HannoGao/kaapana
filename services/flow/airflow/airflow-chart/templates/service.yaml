---
apiVersion: v1
kind: Service
metadata:
  name: airflow-service
  namespace: "{{ .Values.global.services_namespace }}"
spec:
  selector:
    app-name: airflow
  ports:
    - port: 8080
      name: airflow-http
    - port: 5678
      name: debug-port
    - port: 9102
      name: metrics-port
---
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  name: airflow-ingress-ip
  namespace: "{{ .Values.global.services_namespace }}"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: {{  .Values.global.system_namespace  }}-errorpages@kubernetescrd
    kubernetes.io/ingress.global-static-ip-name: "kubernetes-ingress"
spec:
  rules:
  - host: 
    http:
      paths:
      - path: /flow
        pathType: ImplementationSpecific
        backend:
          service:
            name: airflow-service
            port:
              name: airflow-http
---
# apiVersion: traefik.containo.us/v1alpha1
# kind: Middleware
# metadata:
#   name: rewrite-flow
#   namespace: "{{ .Values.global.services_namespace }}"
# spec:
#   replacePath:
#     path: /flow/home
# ---
# apiVersion: networking.k8s.io/v1 
# kind: Ingress
# metadata:
#   name: flow-rewrite
#   namespace: "{{ .Values.global.services_namespace }}"
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     traefik.ingress.kubernetes.io/router.middlewares: "{{ .Values.global.services_namespace }}"-rewrite-flow@kubernetescrd,{{  .Values.global.system_namespace  }}-errorpages@kubernetescrd
#     kubernetes.io/ingress.global-static-ip-name: "kubernetes-ingress"
# spec:
#   rules:
#   - host:
#     http:
#       paths:
#       - path: /flow
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: airflow-service
#             port:
#               name: airflow-http
# ---