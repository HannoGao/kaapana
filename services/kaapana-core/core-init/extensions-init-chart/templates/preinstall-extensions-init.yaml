---
apiVersion: batch/v1
kind: Job
metadata:
  name: preinstall-extensions-init
  namespace: kube-system
spec:
  template:
    metadata:
      name: preinstall-extensions-init
    spec:
      initContainers:
        - name: init-kube-helm
          image: {{  .Values.global.registry_url }}/service_checker:1.1
          imagePullPolicy: {{ .Values.global.pull_policy_jobs }}
          env:
            - name: WAIT
              value: "kube-helm,kube-helm-service.kube-system.svc,5000,/kube-helm-api/health-check"
            - name: DELAY
              value: "2"
            - name: TIMEOUT
              value: "10"
        - name: init-extensions
          image: {{  .Values.global.registry_url }}/service_checker:1.1
          imagePullPolicy: {{ .Values.global.pull_policy_jobs }}
          env:
            - name: DELAY
              value: "2"
            - name: FILES_AND_FOLDERS_EXISTS
              value: "{{- range $extension := .Values.global.preinstall_extensions }}/root/charts/extensions/{{ $extension.name }}-{{ $extension.version }}.tgz;{{- end }}"
          volumeMounts:
            - name: helmextensions
              mountPath: "/root/charts"
      containers:
{{- range $extension := .Values.global.preinstall_extensions }}
      - name: preinstall-{{ uuidv4 | trunc 10 }}
        image: {{  .Values.global.registry_url }}/service_checker:1.1
        imagePullPolicy:  {{ .Values.global.pull_policy_pods }}
        command: ["/bin/sh", "-c"]
        args: ["echo -e \"import requests;r=requests.post('http://kube-helm-service.kube-system.svc:5000/kube-helm-api/helm-install-chart', json={'name': '{{ $extension.name }}', 'version': '{{ $extension.version }}' });print(r)\" | python3"]
{{- end }}
      restartPolicy: Never
      volumes:
      - name: helmextensions
        hostPath:
          path: {{ .Values.global.fast_data_dir }}/charts
          type: DirectoryOrCreate
      imagePullSecrets:
      - name: registry-secret
  backoffLimit: 0